name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: Cluster0
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/writing-workflows/choosing-where-your-workflow-runs/running-jobs-in-a-container
    # This runs the entire job in a container on the runner
    # container:
    #   image: node:16    
    #   env:
    #     CONTAINER_ENV_VAR: 'Hello'
    env:
      # mongodb connection protocol for the MongoDB service container
      MONGODB_CONNECTION_PROTOCOL: mongodb
      # address/name of the MongoDB service container on the container network - this only works if the job/tests connecting are also containerized
      # MONGODB_CLUSTER_ADDRESS: mongodb 
      # address/name of the MongoDB service container on the runner localhost - this only works if the job/tests connecting are not containerized
      MONGODB_CLUSTER_ADDRESS: localhost:27017
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    # This runs a service in a container on the runner
    services:
      mongodb:
        image: mongo
        env:
          # config for containerized MongoDB
          MONGO_INITDB_DATABASE: ${{ env.MONGODB_DB_NAME }}
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGODB_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
        # map the container port to the runner host port
        ports:
          - 27017:27017
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
